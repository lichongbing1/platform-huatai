<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.RiderOrderDao">

    <resultMap type="com.platform.entity.RiderOrderEntity" id="riderOrderMap">
        <result property="id" column="id"/>
        <result property="riderId" column="rider_id"/>
        <result property="orderId" column="order_id"/>
        <result property="state" column="state"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="cancelTime" column="cancel_time"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.RiderOrderEntity">
		select
			`id`,
			`rider_id`,
			`order_id`,
			`state`,
			`remark`,
			`create_time`,
			`cancel_time`
		from mall_rider_order
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.RiderOrderEntity">
        select
        `id`,
        `rider_id`,
        `order_id`,
        `state`,
        `remark`,
        `create_time`,
        `cancel_time`
        from mall_rider_order
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from mall_rider_order
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.RiderOrderEntity" useGeneratedKeys="true" keyProperty="id">
		insert into mall_rider_order(
			`rider_id`,
			`order_id`,
			`state`,
			`remark`,
			`create_time`,
			`cancel_time`)
		values(
			#{riderId},
			#{orderId},
			#{state},
			#{remark},
			now(),
			#{cancelTime})
	</insert>

    <update id="update" parameterType="com.platform.entity.RiderOrderEntity">
        update mall_rider_order
        <set>
            <if test="riderId != null">`rider_id` = #{riderId},</if>
            <if test="orderId != null">`order_id` = #{orderId},</if>
            <if test="state != null">`state` = #{state},</if>
            <if test="remark != null">`remark` = #{remark},</if>
            <if test="cancelTime != null">`cancel_time` = #{cancelTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from mall_rider_order where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from mall_rider_order where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>